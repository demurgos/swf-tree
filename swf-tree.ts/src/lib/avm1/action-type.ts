import { CaseStyle } from "kryo/case-style";
import { TsEnumType } from "kryo/types/ts-enum";

export enum ActionType {
  Unknown,
  Add,
  Add2,
  And,
  AsciiToChar,
  BitAnd,
  BitLShift,
  BitOr,
  BitRShift,
  BitURShift,
  BitXor,
  Call,
  CallFunction,
  CallMethod,
  CastOp,
  CharToAscii,
  CloneSprite,
  ConstantPool,
  Decrement,
  DefineFunction,
  DefineFunction2,
  DefineLocal,
  DefineLocal2,
  Delete,
  Delete2,
  Divide,
  EndDrag,
  Enumerate,
  Enumerate2,
  Equals,
  Equals2,
  Extends,
  FsCommand2,
  GetMember,
  GetProperty,
  GetTime,
  GetUrl,
  GetUrl2,
  GetVariable,
  GotoFrame,
  GotoFrame2,
  GotoLabel,
  Greater,
  If,
  ImplementsOp,
  Increment,
  InitArray,
  InitObject,
  InstanceOf,
  Jump,
  Less,
  Less2,
  MbAsciiToChar,
  MbCharToAscii,
  MbStringExtract,
  MbStringLength,
  Modulo,
  Multiply,
  NewMethod,
  NewObject,
  NextFrame,
  Not,
  Or,
  Play,
  Pop,
  PreviousFrame,
  Push,
  PushDuplicate,
  RandomNumber,
  RemoveSprite,
  Return,
  SetMember,
  SetProperty,
  SetTarget,
  SetTarget2,
  SetVariable,
  StackSwap,
  StartDrag,
  Stop,
  StopSounds,
  StoreRegister,
  StrictEquals,
  StrictMode,
  StringAdd,
  StringEquals,
  StringExtract,
  StringGreater,
  StringLength,
  StringLess,
  Subtract,
  TargetPath,
  Throw,
  ToggleQuality,
  ToInteger,
  ToNumber,
  ToString,
  Trace,
  Try,
  TypeOf,
  WaitForFrame,
  WaitForFrame2,
  With,
}

export const $ActionType: TsEnumType<ActionType> = new TsEnumType<ActionType>({
  enum: ActionType,
  changeCase: CaseStyle.KebabCase,
});
